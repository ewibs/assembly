import fs from 'fs';
import path from 'path';
import { format } from 'prettier';
import parserCss from 'prettier/parser-postcss';

import { IBundleContext } from './compile';
import { ModuleMap } from './module-map';

export class CompilerStyleSheet extends ModuleMap<Partial<CSSStyleDeclaration>> {

  constructor(public readonly context: IBundleContext) { super(); }

  parser = 'css';

  renderModule(content: Partial<CSSStyleDeclaration>, module: string): string {
    return `
      ${module} {
        ${Object.entries(content)
        .filter(([prop, value]) => !!prop && !!value)
        .map(([prop, value]) => {
          let regex = /[a-z][A-Z]/g;
          let tries = 0;
          while (regex.test(prop) && ++tries < 10) {
            let index = regex.lastIndex - 1;
            prop = prop.substring(0, index) + '-' + prop.substring(index);
          }
          return `${prop.toLowerCase()}: ${value};`;
        }).join('\n')
      }
      }
    `
  }

  wrap(renderedContent: string): string {
    return `
      /* Generated by ewibs: http://ewibs.app */
      ${renderedContent}
    `;
  }

  override renderGlobal(): string {
    if (this.context.assembly.settings.globalStyle.normalize) {
      return format(`
        ${fs.readFileSync(path.resolve(__dirname, 'normalize.css'))}
        ${super.renderGlobal()}
      `, { parser: this.parser, plugins: [parserCss] });
    }
    return super.renderGlobal();
  }

}